/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |				
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9                                   	
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         localEuler;
}

gradSchemes
{

    //default         Gauss linear;
    //default         cellMDLimited Gauss linear 1;

    //default 	     leastSquares;
    //default 	     cellMDLimited leastSquares 1;
    //default 	     cellLimited leastSquares 1;
    //default 	     faceMDLimited leastSquares 1;
    //default 	     faceLimited leastSquares 1;

    ///default 	     Gauss linear;
    //default 	     cellMDLimited Gauss linear 1;
    //default 	     cellLimited Gauss linear 1;
    default 	     cellLimited<cubic> 1.5 Gauss linear 1;

    //default 	     faceMDLimited Gauss linear 1;
    //default 	     faceLimited Gauss linear 1;

    //grad(U)	     cellLimited Gauss linear 1;
    //grad(p)	     cellLimited Gauss linear 0.333;
    //grad(h)	     cellLimited Gauss linear 0.333;

    //For postProcess grad(rho) using function object
    //grad(rho)	     cellLimited Gauss linear 1;

}

divSchemes
{
    default         none;
    //div(phi,U)      Gauss linearUpwind default;

    //div(phi,U)      Gauss vanLeer;
    div(phi,U)      Gauss vanLeerV;

    //div(phi,U)      Gauss Minmod;
    //div(phi,U)      Gauss MinmodV;

    //div(phi,U)      Gauss SuperBeeV;
    //div(phi,U)      Gauss SuperBeeV;

    //div(phi,U)      Gauss linear;
    //div(phi,U)      Gauss upwind;

    //div(phi,(p|rho)) Gauss Minmod;	
    //div(phid,p)      Gauss Minmod;

    div(phi,(p|rho)) Gauss linearUpwind default;
    div(phid,p)      Gauss linearUpwind default;

    //div(phi,K)       Gauss limitedLinear 1;
    //div(phi,h)      Gauss limitedLinear 1;	//Causes div

    //div(phi,K)      Gauss upwind;
    //div(phi,h)      Gauss upwind;

    div(phi,K)      Gauss linearUpwind default;
    div(phi,h)      Gauss linearUpwind default;

    div(grad(rho)) Gauss linear;

    div(U) Gauss linear;

    div(gradient_rho) Gauss linear;

    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear limited 1;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         limited 1;
}

// ************************************************************************* //
